{"ast":null,"code":"var _jsxFileName = \"/Users/s.kharlanov/Documents/FnD/github/react/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from './modules/header';\nimport SearchBar from './modules/search';\nimport { getSongs, getPlaylistSongs } from './modules/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  async function searchAndDisplay(songTitle) {\n    const results = await getSongs(songTitle);\n    const playlist = await getPlaylistSongs();\n\n    //  const duplicate = playlist.findIndex(el => el.track.id == song.id);\n    //\n    //\n    console.log('-----sResult-------');\n    console.log(results);\n    console.log('------playlist-------');\n    console.log(playlist);\n    setSongs(results);\n  }\n  async function updatePlaylist() {\n    const results = await getPlaylistSongs();\n    setPlaylist(results);\n  }\n  useEffect(() => {\n    updatePlaylist();\n  }, []);\n  function addSong(song) {\n    const data = {\n      track: {\n        name: song.name,\n        artists: [{\n          name: song.artists[0].name\n        }],\n        id: song.id\n      }\n    };\n    if (playlist.findIndex(el => el.track.id == song.id) >= 0) {\n      alert('Already added');\n    } else {\n      console.log(data);\n      setPlaylist(prevPlaylist => [...prevPlaylist, data]);\n    }\n  }\n  function removeSong(song) {\n    setPlaylist(prevPlaylist => prevPlaylist.filter(el => el.track.id !== song.track.id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: searchAndDisplay,\n        preview: searchAndDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"songsList\",\n            children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"song\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: song.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"artist\",\n                  children: song.artists[0].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"addPlaylist\",\n                  onClick: () => addSong(song),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, song.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"songsList\",\n            children: playlist.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"song\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: song.track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"artist\",\n                  children: song.track.artists[0].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"addPlaylist\",\n                  onClick: () => removeSong(song),\n                  children: \"Rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, song.track.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lyz1VmdtK6ymS6ILyfpKAJoHSyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchBar","getSongs","getPlaylistSongs","jsxDEV","_jsxDEV","App","_s","songs","setSongs","playlist","setPlaylist","searchAndDisplay","songTitle","results","console","log","updatePlaylist","addSong","song","data","track","name","artists","id","findIndex","el","alert","prevPlaylist","removeSong","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","preview","map","onClick","_c","$RefreshReg$"],"sources":["/Users/s.kharlanov/Documents/FnD/github/react/jammming/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from './modules/header';\nimport SearchBar from './modules/search';\nimport {getSongs, getPlaylistSongs} from './modules/fetch';\n\nfunction App() {\n  const [songs, setSongs] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n\n  async function searchAndDisplay(songTitle) {\n    const results = await getSongs(songTitle);\n    const playlist = await getPlaylistSongs();\n\n//  const duplicate = playlist.findIndex(el => el.track.id == song.id);\n//\n//\n    console.log('-----sResult-------');\n    console.log(results); \n    console.log('------playlist-------');\n    console.log(playlist); \n    setSongs(results);\n  }\n\n  async function updatePlaylist() {\n    const results = await getPlaylistSongs();\n    setPlaylist(results);\n  }\n\n  useEffect(() => {\n    updatePlaylist();\n  }, []);\n\n  function addSong(song) {\n    const data = {\n      track: {\n        name: song.name,\n        artists: [{name: song.artists[0].name}],\n        id: song.id\n      }\n    }\n     if (playlist.findIndex(el => el.track.id == song.id) >= 0) {\n      alert('Already added');\n     } else {\n      console.log(data);\n      setPlaylist(prevPlaylist => [...prevPlaylist, data]);  \n     }\n  }\n\n  function removeSong(song) {\n    setPlaylist(prevPlaylist => prevPlaylist.filter(el => el.track.id !== song.track.id))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <Header />\n        <SearchBar onSearch={searchAndDisplay} preview={searchAndDisplay}/>\n        <div className=\"main\">\n          <div className=\"songContainer\">\n            <h2>Results</h2>\n              <ul className='songsList'>\n              {songs.map((song) =>\n              <li key={song.id} className='song'>\n                <div>\n                  <h3>{song.name}</h3>\n                  <p className='artist'>{song.artists[0].name}</p>\n                </div>\n                <div>\n                  <button className='addPlaylist' onClick={()=> addSong(song)}>Add</button>\n                </div>\n              </li>\n              )}</ul>\n          </div> \n          <div className=\"songContainer\">\n            <h2>Playlist</h2>\n            <ul className='songsList'> \n              {playlist.map((song) => \n                <li key={song.track.id} className='song'>\n                <div>\n                  <h3>{song.track.name}</h3>\n                  <p className='artist'>{song.track.artists[0].name}</p>\n                </div>\n                <div>\n                  <button className='addPlaylist' onClick={() => removeSong(song)}>Rem</button>\n                </div>\n              </li>\n              )}\n            </ul>\n          </div>\n      </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}