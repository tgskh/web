{"ast":null,"code":"async function getToken() {\n  const clientId = '9695df66110c4070ab27fdcb07f9d022';\n  const clientSecret = 'eb859c7faacb4037977fed00a8d04b19';\n  const urlToken = 'https://accounts.spotify.com/api/token';\n  const headersToken = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  const body = new URLSearchParams({\n    'grant_type': 'client_credentials',\n    'client_id': clientId,\n    'client_secret': clientSecret\n  });\n  try {\n    const response = await fetch(urlToken, {\n      method: 'POST',\n      headers: headersToken,\n      body: body\n    });\n    const data = await response.json();\n    return data.access_token;\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\nasync function getUserID() {\n  const urlToFetch = 'https://api.spotify.com/v1/me';\n  const token = await getToken();\n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  };\n  console.log(headersSearch);\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\nasync function getSongs(songTitle) {\n  const urlSearch = 'https://api.spotify.com/v1/search?q=';\n  const trackLimit = '15';\n  const options = '&type=track&limit=';\n  const token = await getToken();\n  const urlToFetch = `${urlSearch}${songTitle}${options}${trackLimit}`;\n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  };\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    return data.tracks.items;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\nasync function getPlaylist() {\n  const token = await getToken();\n  const urlToFetch = 'https://api.spotify.com/v1/users/smedjan/playlists';\n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  };\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\nexport default getSongs;","map":{"version":3,"names":["getToken","clientId","clientSecret","urlToken","headersToken","body","URLSearchParams","response","fetch","method","headers","data","json","access_token","error","console","log","getUserID","urlToFetch","token","headersSearch","getSongs","songTitle","urlSearch","trackLimit","options","tracks","items","getPlaylist"],"sources":["/Users/s.kharlanov/Documents/FnD/github/react/jammming/src/modules/fetch.js"],"sourcesContent":["async function getToken () {\n  const clientId = '9695df66110c4070ab27fdcb07f9d022';\n  const clientSecret = 'eb859c7faacb4037977fed00a8d04b19';\n  \n  const urlToken = 'https://accounts.spotify.com/api/token';\n  const headersToken = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n  \n  const body = new URLSearchParams({\n    'grant_type': 'client_credentials',\n    'client_id': clientId,\n    'client_secret': clientSecret\n  });\n\n  try {\n    const response = await fetch(urlToken, {\n      method: 'POST',\n      headers: headersToken,\n      body: body\n    });\n    const data = await response.json();\n    return data.access_token;\n  } catch (error) {\n    console.log(\"Error:\", error);\n  }\n}\n\nasync function getUserID () {\n  const urlToFetch = 'https://api.spotify.com/v1/me';\n  const token = await getToken();  \n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  }\n  console.log(headersSearch);\n\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    console.log(data)\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\n\nasync function getSongs (songTitle) {\n  const urlSearch = 'https://api.spotify.com/v1/search?q=';\n  const trackLimit = '15';\n  const options = '&type=track&limit=';\n  const token = await getToken();  \n  const urlToFetch = `${urlSearch}${songTitle}${options}${trackLimit}`;\n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  }\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    return data.tracks.items;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\n\nasync function getPlaylist () {\n  const token = await getToken(); \n  const urlToFetch = 'https://api.spotify.com/v1/users/smedjan/playlists';\n  const headersSearch = {\n    'Authorization': `Bearer ${token}`\n  }\n  try {\n    const response = await fetch(urlToFetch, {\n      method: 'GET',\n      headers: headersSearch\n    });\n    const data = await response.json();\n    console.log(data)\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\n\n\nexport default getSongs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}