{"ast":null,"code":"var _jsxFileName = \"/Users/s.kharlanov/Documents/FnD/github/react/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from './modules/header';\nimport SearchBar from './modules/search';\nimport SongList from './modules/list';\nimport getData from './modules/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('initial search query'); // Початковий пошуковий запит\n\n  useEffect(() => {\n    async function searchAndDisplay() {\n      try {\n        const results = await getData(searchQuery);\n        console.log('Results from API:', results); // Логування результатів\n        if (results) {\n          setSongs(results);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    searchAndDisplay();\n  }, [searchQuery]); // Ефект виконується кожного разу при зміні searchQuery\n\n  function handleSearch(songTitle) {\n    setSearchQuery(songTitle); // Оновлюємо пошуковий запит\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongList, {\n      songs: songs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qbfwhMalJUBLTOimLepgX5biGts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","Header","SearchBar","SongList","getData","jsxDEV","_jsxDEV","App","_s","songs","setSongs","searchQuery","setSearchQuery","searchAndDisplay","results","console","log","error","handleSearch","songTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/s.kharlanov/Documents/FnD/github/react/jammming/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from './modules/header';\nimport SearchBar from './modules/search';\nimport SongList from './modules/list';\nimport getData from './modules/fetch';\n\nfunction App() {\n  const [songs, setSongs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('initial search query'); // Початковий пошуковий запит\n\n  useEffect(() => {\n    async function searchAndDisplay() {\n      try {\n        const results = await getData(searchQuery);\n        console.log('Results from API:', results); // Логування результатів\n        if (results) {\n          setSongs(results);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n\n    searchAndDisplay();\n  }, [searchQuery]); // Ефект виконується кожного разу при зміні searchQuery\n\n  function handleSearch(songTitle) {\n    setSearchQuery(songTitle); // Оновлюємо пошуковий запит\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchBar onSearch={handleSearch} />\n      <SongList songs={songs} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,OAAO,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;;EAExEC,SAAS,CAAC,MAAM;IACd,eAAea,gBAAgBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,OAAO,CAACO,WAAW,CAAC;QAC1CI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC,CAAC,CAAC;QAC3C,IAAIA,OAAO,EAAE;UACXJ,QAAQ,CAACI,OAAO,CAAC;QACnB;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,SAASO,YAAYA,CAACC,SAAS,EAAE;IAC/BP,cAAc,CAACO,SAAS,CAAC,CAAC,CAAC;EAC7B;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA,CAACL,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACJ,SAAS;MAACwB,QAAQ,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCnB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAACjB,EAAA,CA/BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}