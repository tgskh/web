{"ast":null,"code":"var _jsxFileName = \"/Users/s.kharlanov/Documents/FnD/github/react/calc/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { ButtonNum, ButtonOperaion } from './modules/button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const numberArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  const operationArr = ['C', '=', '+', '-', '*', '/', ','];\n  const [display, setDisplay] = useState('0');\n  function numClick(event) {\n    const newValue = event.target.value;\n    setDisplay(prevDisplay => prevDisplay === '0' ? newValue : `${prevDisplay}${newValue}`);\n  }\n  function operationClick(event) {\n    const newValue = event.target.value;\n    setDisplay(prevDisplay => prevDisplay === '0' ? newValue : `${prevDisplay}${newValue}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !display ? 0 : display\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), numberArr.map((num, index) => /*#__PURE__*/_jsxDEV(ButtonNum, {\n        value: num,\n        onClick: numClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), operationArr.map((num, index) => /*#__PURE__*/_jsxDEV(ButtonOperaion, {\n        value: num,\n        onClick: operationClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LICnLFlpCfnmcjwQCZAWElkwtZk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ButtonNum","ButtonOperaion","useState","jsxDEV","_jsxDEV","App","_s","numberArr","operationArr","display","setDisplay","numClick","event","newValue","target","value","prevDisplay","operationClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","num","index","onClick","_c","$RefreshReg$"],"sources":["/Users/s.kharlanov/Documents/FnD/github/react/calc/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {ButtonNum, ButtonOperaion} from './modules/button';\nimport {useState} from 'react'\n\nfunction App() {\n  const numberArr = [1,2,3,4,5,6,7,8,9,0 ];\n  const operationArr = ['C', '=', '+', '-', '*', '/', ','];\n  const [display, setDisplay] = useState('0');\n  function numClick(event) {\n    const newValue = event.target.value;\n    setDisplay(prevDisplay => (prevDisplay === '0' ? newValue : `${prevDisplay}${newValue}`));\n  }\n\n  function operationClick(event) {\n    const newValue = event.target.value;\n    setDisplay(prevDisplay => (prevDisplay === '0' ? newValue : `${prevDisplay}${newValue}`));\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <div className=\"screen\">\n          <p>{!display ? 0 : display}</p>\n        </div>\n\n        {/*вивід кнопок з цифрами*/}\n        {numberArr.map((num, index) => (\n          <ButtonNum \n          key={index}\n          value={num}\n          onClick={numClick}/>\n        ))}\n\n        {operationArr.map((num, index) => (\n          <ButtonOperaion \n          key={index}\n          value={num}\n          onClick={operationClick}/>\n        ))}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,SAAS,EAAEC,cAAc,QAAO,kBAAkB;AAC1D,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAE;EACxC,MAAMC,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EAC3C,SAASS,QAAQA,CAACC,KAAK,EAAE;IACvB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCL,UAAU,CAACM,WAAW,IAAKA,WAAW,KAAK,GAAG,GAAGH,QAAQ,GAAG,GAAGG,WAAW,GAAGH,QAAQ,EAAG,CAAC;EAC3F;EAEA,SAASI,cAAcA,CAACL,KAAK,EAAE;IAC7B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCL,UAAU,CAACM,WAAW,IAAKA,WAAW,KAAK,GAAG,GAAGH,QAAQ,GAAG,GAAGG,WAAW,GAAGH,QAAQ,EAAG,CAAC;EAC3F;EAEA,oBACET,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBf,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBf,OAAA;QAAKc,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBf,OAAA;UAAAe,QAAA,EAAI,CAACV,OAAO,GAAG,CAAC,GAAGA;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,EAGLhB,SAAS,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACxBtB,OAAA,CAACJ,SAAS;QAEVe,KAAK,EAAEU,GAAI;QACXE,OAAO,EAAEhB;MAAS,GAFbe,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAES,CACpB,CAAC,EAEDf,YAAY,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BtB,OAAA,CAACH,cAAc;QAEfc,KAAK,EAAEU,GAAI;QACXE,OAAO,EAAEV;MAAe,GAFnBS,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEe,CAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAvCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}